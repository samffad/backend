<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="org.bupt.travel.model.User">

	<resultMap id="RM_User" type="org.bupt.travel.model.User">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="nickname" column="nickname"/>
        <result property="gender" column="gender"/>
        <result property="password" column="password"/>
        <result property="photoPath" column="photo_path"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,name,nickname,gender,password,photo_path
	    ]]>
	</sql>
	
	<select id="getuserinfo" resultMap="RM_User">
    	SELECT <include refid="columns" />
    	FROM user
    	WHERE
    	name = #{name}
    </select>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert">
    <![CDATA[
        INSERT INTO user (
        	id ,
        	name ,
        	nickname ,
        	gender ,
        	password ,
        	photo_path 
        ) VALUES (
        	#{id} ,
        	#{name} ,
        	#{nickname} ,
        	#{gender} ,
        	#{password} ,
        	#{photoPath} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
	
	
     <sql id="update_sql">
         <set>
                <if test="name != null and name != ''">
	         	name = #{name} ,
	         </if>
                <if test="nickname != null and nickname != ''">
	         	nickname = #{nickname} ,
	         </if>
                <if test="gender != null">
	         	gender = #{gender} ,
	         </if>
                <if test="password != null and password != ''">
	         	password = #{password} ,
	         </if>
                <if test="photoPath != null and photoPath != ''">
	         	photo_path = #{photoPath} 
	         </if>
       </set>
    </sql>
    
	<update id="update" >
	        UPDATE  user
	    <include refid="update_sql" />
	        WHERE 
	                id = #{id} 
	</update>
	
	<update id="update_avatar" >
	        UPDATE  user
	    	SET photo_path = #{photoPath}
	        WHERE 
	                id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM user WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <delete id="delete_batch_string" parameterType="map">
    <![CDATA[
        DELETE FROM user WHERE id IN (${ids})
    ]]>
    </delete>
    
    <delete id="delete_batch_array">
        DELETE FROM user WHERE id IN 
        <foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
    <delete id="delete_batch_list">
        DELETE FROM user WHERE id IN 
        <foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
    <select id="getById" resultMap="RM_User">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM user 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
               <if test="id != null">
		             AND id = #{id}
	           </if>
                <if test="name != null and name !=''">
		          <choose>  
				   <when test="selectType['name']==1">  
				      AND name like CONCAT('%', #{name}, '%')
				   </when>  
					<otherwise>  
					      AND name = #{name}
					   </otherwise>  
					</choose>
	            </if>
                <if test="nickname != null and nickname !=''">
		          <choose>  
				   <when test="selectType['nickname']==1">  
				      AND nickname like CONCAT('%', #{nickname}, '%')
				   </when>  
					<otherwise>  
					      AND nickname = #{nickname}
					   </otherwise>  
					</choose>
	            </if>
               <if test="gender != null">
		             AND gender = #{gender}
	           </if>
                <if test="password != null and password !=''">
		          <choose>  
				   <when test="selectType['password']==1">  
				      AND password like CONCAT('%', #{password}, '%')
				   </when>  
					<otherwise>  
					      AND password = #{password}
					   </otherwise>  
					</choose>
	            </if>
                <if test="photoPath != null and photoPath !=''">
		          <choose>  
				   <when test="selectType['photoPath']==1">  
				      AND photo_path like CONCAT('%', #{photoPath}, '%')
				   </when>  
					<otherwise>  
					      AND photo_path = #{photoPath}
					   </otherwise>  
					</choose>
	            </if>
	         <if test="ids != null  and ids !=''">  
		        AND id in (${ids})
		   </if> 		
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM user 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RM_User">
    	SELECT <include refid="columns" />
	    FROM user 
		<include refid="findPage_where"/>
		
		<if test="sortColumns != null and sortColumns !=''">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>


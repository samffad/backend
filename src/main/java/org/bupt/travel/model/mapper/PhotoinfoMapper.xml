<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="org.bupt.travel.model.Photoinfo">

	<resultMap id="RM_Photoinfo" type="org.bupt.travel.model.Photoinfo">
        <result property="id" column="id"/>
        <result property="photoName" column="photo_name"/>
        <result property="photoPath" column="photo_path"/>
        <result property="photoRevisePath" column="photo_revise_path"/>
        <result property="createTime" column="create_time"/>
        <result property="status" column="status"/>
        <result property="userId" column="user_id"/>
        <result property="blogId" column="blog_id"/>
        <result property="footprintId" column="footprint_id"/>
        <result property="type" column="type"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,photo_name,photo_path,photo_revise_path,create_time,status,user_id,blog_id,footprint_id,type
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO photoinfo (
        	id ,
        	photo_name ,
        	photo_path ,
        	photo_revise_path ,
        	create_time ,
        	status ,
        	user_id ,
        	blog_id ,
        	footprint_id ,
        	type 
        ) VALUES (
        	#{id} ,
        	#{photoName} ,
        	#{photoPath} ,
        	#{photoRevisePath} ,
        	#{createTime} ,
        	#{status} ,
        	#{userId} ,
        	#{blogId} ,
        	#{footprintId} ,
        	#{type} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
	
	
     <sql id="update_sql">
         <set>
                <if test="photoName != null and photoName != ''">
	         	photo_name = #{photoName} ,
	         </if>
                <if test="photoPath != null and photoPath != ''">
	         	photo_path = #{photoPath} ,
	         </if>
                <if test="photoRevisePath != null and photoRevisePath != ''">
	         	photo_revise_path = #{photoRevisePath} ,
	         </if>
                <if test="createTime != null">
	         	create_time = #{createTime} ,
	       </if>
                <if test="status != null">
	         	status = #{status} ,
	         </if>
                <if test="userId != null">
	         	user_id = #{userId} ,
	         </if>
                <if test="blogId != null">
	         	blog_id = #{blogId} ,
	         </if>
                <if test="footprintId != null">
	         	footprint_id = #{footprintId} ,
	         </if>
                <if test="type != null">
	         	type = #{type} 
	         </if>
       </set>
    </sql>
    
	<update id="update" >
	        UPDATE  photoinfo
	    <include refid="update_sql" />
	        WHERE 
	                id = #{id} 
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM photoinfo WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <delete id="delete_batch_string" parameterType="map">
    <![CDATA[
        DELETE FROM photoinfo WHERE id IN (${ids})
    ]]>
    </delete>
    
    <delete id="delete_batch_array">
        DELETE FROM photoinfo WHERE id IN 
        <foreach item="item" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
    <delete id="delete_batch_list">
        DELETE FROM photoinfo WHERE id IN 
        <foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
    <select id="getById" resultMap="RM_Photoinfo">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM photoinfo 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
               <if test="id != null">
		             AND id = #{id}
	           </if>
                <if test="photoName != null and photoName !=''">
		          <choose>  
				   <when test="selectType['photoName']==1">  
				      AND photo_name like CONCAT('%', #{photoName}, '%')
				   </when>  
					<otherwise>  
					      AND photo_name = #{photoName}
					   </otherwise>  
					</choose>
	            </if>
                <if test="photoPath != null and photoPath !=''">
		          <choose>  
				   <when test="selectType['photoPath']==1">  
				      AND photo_path like CONCAT('%', #{photoPath}, '%')
				   </when>  
					<otherwise>  
					      AND photo_path = #{photoPath}
					   </otherwise>  
					</choose>
	            </if>
                <if test="photoRevisePath != null and photoRevisePath !=''">
		          <choose>  
				   <when test="selectType['photoRevisePath']==1">  
				      AND photo_revise_path like CONCAT('%', #{photoRevisePath}, '%')
				   </when>  
					<otherwise>  
					      AND photo_revise_path = #{photoRevisePath}
					   </otherwise>  
					</choose>
	            </if>
		       <if test="createTimeBegin != null">
					AND create_time >= #{createTimeBegin}
			   </if>
			   <if test="createTimeEnd != null">
					AND create_time &lt;= #{createTimeEnd}
			   </if>
               <if test="status != null">
		             AND status = #{status}
	           </if>
               <if test="userId != null">
		             AND user_id = #{userId}
	           </if>
               <if test="blogId != null">
		             AND blog_id = #{blogId}
	           </if>
               <if test="footprintId != null">
		             AND footprint_id = #{footprintId}
	           </if>
               <if test="type != null">
		             AND type = #{type}
	           </if>
	         <if test="ids != null  and ids !=''">  
		        AND id in (${ids})
		   </if> 		
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM photoinfo 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RM_Photoinfo">
    	SELECT <include refid="columns" />
	    FROM photoinfo 
		<include refid="findPage_where"/>
		
		<if test="sortColumns != null and sortColumns !=''">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

